"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/utils/api.js":
/*!**************************!*\
  !*** ./src/utils/api.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCrypto: function() { return /* binding */ getCrypto; },\n/* harmony export */   getNews: function() { return /* binding */ getNews; },\n/* harmony export */   getWeather: function() { return /* binding */ getWeather; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nconst OPENWEATHERMAP_API_KEY = \"200afe84adbfdb7cfeb068f9bf0825e5\";\nconst NEWSDATA_API_KEY = \"pub_77789152a62ca5ec19f127816fb2243958b6d\";\nconst getWeather = async (cities)=>{\n    const promises = cities.map(async (city)=>{\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(OPENWEATHERMAP_API_KEY));\n            return response.data;\n        } catch (error) {\n            throw new Error(\"Failed to fetch weather for \".concat(city));\n        }\n    });\n    return Promise.all(promises);\n};\nconst getCrypto = async ()=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/api/crypto\");\n        return response.data;\n    } catch (error) {\n        throw new Error(\"Failed to fetch crypto data\");\n    }\n};\nconst getNews = async ()=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"https://newsdata.io/api/1/news?apikey=\".concat(NEWSDATA_API_KEY, \"&q=cryptocurrency\"));\n        return response.data.results;\n    } catch (error) {\n        throw new Error(\"Failed to fetch news\");\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvYXBpLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEI7QUFFMUIsTUFBTUMseUJBQXlCQyxrQ0FBOEM7QUFDN0UsTUFBTUcsbUJBQW1CSCwyQ0FBd0M7QUFFMUQsTUFBTUssYUFBYSxPQUFPQztJQUMvQixNQUFNQyxXQUFXRCxPQUFPRSxHQUFHLENBQUMsT0FBT0M7UUFDakMsSUFBSTtZQUNGLE1BQU1DLFdBQVcsTUFBTVosaURBQVMsQ0FDOUIscURBQW1FQyxPQUFkVSxNQUFLLFdBQWdDLE9BQXZCVjtZQUVyRSxPQUFPVyxTQUFTRSxJQUFJO1FBQ3RCLEVBQUUsT0FBT0MsT0FBTztZQUNkLE1BQU0sSUFBSUMsTUFBTSwrQkFBb0MsT0FBTEw7UUFDakQ7SUFDRjtJQUNBLE9BQU9NLFFBQVFDLEdBQUcsQ0FBQ1Q7QUFDckIsRUFBRTtBQUVLLE1BQU1VLFlBQVk7SUFDdkIsSUFBSTtRQUNGLE1BQU1QLFdBQVcsTUFBTVosaURBQVMsQ0FBQztRQUNqQyxPQUFPWSxTQUFTRSxJQUFJO0lBQ3RCLEVBQUUsT0FBT0MsT0FBTztRQUNkLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtBQUNGLEVBQUU7QUFFSyxNQUFNSSxVQUFVO0lBQ3JCLElBQUk7UUFDRixNQUFNUixXQUFXLE1BQU1aLGlEQUFTLENBQzlCLHlDQUEwRCxPQUFqQkssa0JBQWlCO1FBRTVELE9BQU9PLFNBQVNFLElBQUksQ0FBQ08sT0FBTztJQUM5QixFQUFFLE9BQU9OLE9BQU87UUFDZCxNQUFNLElBQUlDLE1BQU07SUFDbEI7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy91dGlscy9hcGkuanM/ZTI4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xyXG5cclxuY29uc3QgT1BFTldFQVRIRVJNQVBfQVBJX0tFWSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX09QRU5XRUFUSEVSTUFQX0FQSV9LRVk7XHJcbmNvbnN0IE5FV1NEQVRBX0FQSV9LRVkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19ORVdTREFUQV9BUElfS0VZO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldFdlYXRoZXIgPSBhc3luYyAoY2l0aWVzKSA9PiB7XHJcbiAgY29uc3QgcHJvbWlzZXMgPSBjaXRpZXMubWFwKGFzeW5jIChjaXR5KSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChcclxuICAgICAgICBgaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/cT0ke2NpdHl9JmFwcGlkPSR7T1BFTldFQVRIRVJNQVBfQVBJX0tFWX1gXHJcbiAgICAgICk7XHJcbiAgICAgIHJldHVybiByZXNwb25zZS5kYXRhO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZmV0Y2ggd2VhdGhlciBmb3IgJHtjaXR5fWApO1xyXG4gICAgfVxyXG4gIH0pO1xyXG4gIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0Q3J5cHRvID0gYXN5bmMgKCkgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnL2FwaS9jcnlwdG8nKTtcclxuICAgIHJldHVybiByZXNwb25zZS5kYXRhO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBjcnlwdG8gZGF0YScpO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXROZXdzID0gYXN5bmMgKCkgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChcclxuICAgICAgYGh0dHBzOi8vbmV3c2RhdGEuaW8vYXBpLzEvbmV3cz9hcGlrZXk9JHtORVdTREFUQV9BUElfS0VZfSZxPWNyeXB0b2N1cnJlbmN5YFxyXG4gICAgKTtcclxuICAgIHJldHVybiByZXNwb25zZS5kYXRhLnJlc3VsdHM7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIG5ld3MnKTtcclxuICB9XHJcbn07Il0sIm5hbWVzIjpbImF4aW9zIiwiT1BFTldFQVRIRVJNQVBfQVBJX0tFWSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19PUEVOV0VBVEhFUk1BUF9BUElfS0VZIiwiTkVXU0RBVEFfQVBJX0tFWSIsIk5FWFRfUFVCTElDX05FV1NEQVRBX0FQSV9LRVkiLCJnZXRXZWF0aGVyIiwiY2l0aWVzIiwicHJvbWlzZXMiLCJtYXAiLCJjaXR5IiwicmVzcG9uc2UiLCJnZXQiLCJkYXRhIiwiZXJyb3IiLCJFcnJvciIsIlByb21pc2UiLCJhbGwiLCJnZXRDcnlwdG8iLCJnZXROZXdzIiwicmVzdWx0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/api.js\n"));

/***/ })

});